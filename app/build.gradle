buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    google()
}

Properties props = new Properties()
props.load(new FileInputStream(file(project.property("austinfeedsme.properties"))))

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.austindroids.austinfeedsme"
        minSdkVersion 16
        targetSdkVersion 22

        manifestPlaceholders = [google_maps_key: props['google_maps_key'],
                                fabricApiKey: props['fabric']]

        versionCode 10
        versionName "1.7"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    flavorDimensions "mode"
    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "mode"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "mode"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    // Support Libs
    compile 'com.android.support:support-v4:27.0.0'
    compile 'com.android.support:appcompat-v7:27.0.0'
    compile 'com.android.support:recyclerview-v7:27.0.0'
    compile 'com.android.support:cardview-v7:27.0.0'
    compile 'com.android.support:design:27.0.0'

    // Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    // Jake Wharton
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Dagger 2
    annotationProcessor "com.google.dagger:dagger-compiler:2.11"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.11"
    compile "com.google.dagger:dagger:2.11"
    compile "com.google.dagger:dagger-android:2.11"
    compile "com.google.dagger:dagger-android-support:2.11"

    // Firebase dependencies
    compile 'com.google.firebase:firebase-database:11.6.0'
    compile 'com.google.firebase:firebase-auth:11.6.0'
    compile 'com.google.firebase:firebase-core:11.6.0'
    compile 'com.google.firebase:firebase-messaging:11.6.0'
    compile 'com.firebaseui:firebase-ui-auth:3.1.0'

    // Needed for Authentication with these services
    compile 'com.google.android.gms:play-services-auth:11.6.0'
    // Needed for MapView
    compile 'com.google.android.gms:play-services-maps:11.6.0'

    // Retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    // RX
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.6'

    // Debugging
//    debugCompile 'com.amitshekhar.android:debug-db:1.0.0'
//    debugCompile 'com.readystatesoftware.chuck:library:1.1.0'
//    releaseCompile 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    // Unit testing dependencies
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.powermock:powermock-module-junit4:1.6.2"
    testCompile "org.powermock:powermock-api-mockito:1.6.2"
    testCompile 'com.squareup.okhttp3:mockwebserver:3.8.1'

    // Espresso Dependencies
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    })

    configurations.all {
        resolutionStrategy {
            force 'com.android.support:support-annotations:23.0.1'
            force 'com.squareup.okio:okio:1.11.0'
            force 'com.squareup.okhttp3:okhttp:3.6.0'
            force 'com.google.code.gson:gson:2.8.0'
        }
    }

    testCompile 'org.mockito:mockito-all:1.10.19'
}

// Needed for Firebase
apply plugin: 'com.google.gms.google-services'